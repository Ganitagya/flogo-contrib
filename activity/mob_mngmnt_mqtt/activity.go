package mob_mngmnt_mqtt

import (
	"fmt"
	"github.com/TIBCOSoftware/flogo-lib/core/activity"
	"github.com/TIBCOSoftware/flogo-lib/logger"
	"github.com/eclipse/paho.mqtt.golang"
)

// log is the default package logger
var log = logger.GetLogger("activity-akash-mqtt-publisher")

const (
	broker   = "broker"
	topic    = "topic"
	qos      = "qos"
	payload  = "message"
	id       = "id"
	user     = "user"
	password = "password"
)

// MyActivity is a stub for your Activity implementation
type MyActivity struct {
	metadata *activity.Metadata
}

// NewActivity creates a new AppActivity
func NewActivity(metadata *activity.Metadata) activity.Activity {
	return &MyActivity{metadata: metadata}
}

// Metadata implements activity.Activity.Metadata
func (a *MyActivity) Metadata() *activity.Metadata {
	return a.metadata
}

// Eval implements activity.Activity.Eval
func (a *MyActivity) Eval(context activity.Context) (done bool, err error) {

type coordinates struct {
		PID string
		Lat  float64
		Long float64
	}
	
	var persons = [255]coordinates {{"P2",40.7396552,-73.9909712},
{"P3",40.7388283,-73.9872985},
{"P4",40.7375968,-73.9878353},
{"P5",40.7358116,-73.987252},
{"P6",40.738317,-73.9931662},
{"P7",40.7372556,-73.988442},
{"P8",40.7371795,-73.9868243},
{"P9",40.7384135,-73.9897725},
{"P10",40.7368272,-73.9897227},
{"P11",40.7383878,-73.9915593},
{"P12",40.7392313,-73.9898858},
{"P13",40.7363963,-73.9867905},
{"P14",40.7379957,-73.9901015},
{"P15",40.7361979,-73.9910125},
{"P1",40.7365767,-73.9932336},
{"P2",40.7392614,-73.9912597},
{"P3",40.7381872,-73.9877553},
{"P4",40.737864,-73.9884611},
{"P5",40.7359447,-73.9875638},
{"P6",40.738085,-73.9926209},
{"P7",40.7372556,-73.988442},
{"P8",40.737392,-73.9873391},
{"P9",40.7384834,-73.9899394},
{"P10",40.7368272,-73.9897227},
{"P11",40.7382815,-73.9919597},
{"P12",40.7391775,-73.9897564},
{"P13",40.736797,-73.9877402},
{"P14",40.7380744,-73.9900678},
{"P15",40.7362489,-73.9909757},
{"P1",40.7370918,-73.9928485},
{"P2",40.7387062,-73.991656},
{"P3",40.7373995,-73.9883381},
{"P4",40.7381741,-73.9892011},
{"P5",40.7361309,-73.9879968},
{"P6",40.7381678,-73.9920423},
{"P7",40.7372556,-73.988442},
{"P8",40.7375945,-73.9878298},
{"P9",40.7383753,-73.9899718},
{"P10",40.7368272,-73.9897227},
{"P11",40.7378983,-73.9922383},
{"P12",40.7391063,-73.9895912},
{"P13",40.7370741,-73.9885705},
{"P1",40.7360842,-73.9935857},
{"P14",40.7384834,-73.9899394},
{"P15",40.7365396,-73.9907664},
{"P1",40.7376358,-73.992437},
{"P2",40.7383543,-73.991907},
{"P3",40.736617,-73.9888922},
{"P4",40.7383885,-73.9897128},
{"P5",40.7363758,-73.9885662},
{"P6",40.7384718,-73.9918218},
{"P7",40.7372556,-73.988442},
{"P8",40.7374394,-73.9883094},
{"P9",40.7381751,-73.9900227},
{"P10",40.7368254,-73.9897186},
{"P11",40.7373355,-73.9926643},
{"P12",40.7390198,-73.9893904},
{"P13",40.7365405,-73.9889492},
{"P14",40.7388093,-73.9898501},
{"P15",40.7368375,-73.9905545},
{"P1",40.7386325,-73.992143},
{"P2",40.7380484,-73.9921289},
{"P3",40.7364308,-73.988694},
{"P4",40.7383207,-73.9899862},
{"P5",40.7365405,-73.9889492},
{"P6",40.7383101,-73.9913705},
{"P7",40.7372556,-73.988442},
{"P8",40.7371958,-73.9884852},
{"P9",40.7379592,-73.9901115},
{"P10",40.7368254,-73.9897186},
{"P11",40.737045,-73.9919715},
{"P12",40.7389544,-73.9892385},
{"P13",40.7370728,-73.9902815},
{"P14",40.7391775,-73.9897564},
{"P15",40.7371164,-73.9903632},
{"P1",40.7386325,-73.992143},
{"P2",40.7377082,-73.9917363},
{"P3",40.7364308,-73.988694},
{"P4",40.7378909,-73.9901283},
{"P5",40.7370384,-73.9885948},
{"P6",40.7381741,-73.9910401},
{"P7",40.7372556,-73.988442},
{"P8",40.7369173,-73.9886769},
{"P9",40.7377646,-73.9900479},
{"P10",40.7368254,-73.9897186},
{"P11",40.7367506,-73.9912694},
{"P12",40.7388389,-73.9889704},
{"P13",40.7376853,-73.9916832},
{"P14",40.7390665,-73.9894988},
{"P15",40.7375353,-73.9902169},
{"P1",40.7386325,-73.992143},
{"P2",40.7375331,-73.9913305},
{"P3",40.7364308,-73.988694},
{"P4",40.7377132,-73.9899264},
{"P5",40.7372789,-73.988893},
{"P6",40.7380753,-73.9908},
{"P7",40.7372028,-73.9887052},
{"P8",40.737272,-73.988876},
{"P9",40.7376687,-73.9898211},
{"P10",40.7370198,-73.9901704},
{"P11",40.7365396,-73.9907664},
{"P12",40.7387268,-73.9887103},
{"P13",40.7380638,-73.992571},
{"P14",40.7389335,-73.98919},
{"P15",40.7378063,-73.9901465},
{"P1",40.7386325,-73.992143},
{"P2",40.7372779,-73.9907382},
{"P3",40.7364308,-73.988694},
{"P4",40.7376411,-73.9897558},
{"P5",40.7374242,-73.9892426},
{"P6",40.7379266,-73.9904388},
{"P7",40.7372837,-73.988905},
{"P8",40.7374521,-73.9893087},
{"P9",40.7376199,-73.9897055},
{"P10",40.737424,-73.9902433},
{"P11",40.7370981,-73.9903713},
{"P12",40.7385683,-73.9883333},
{"P13",40.7387504,-73.9941849},
{"P14",40.7388049,-73.9888915},
{"P15",40.7376397,-73.9897525},
{"P1",40.7384735,-73.9917675},
{"P2",40.7373376,-73.9902638},
{"P3",40.7364308,-73.988694},
{"P4",40.7376411,-73.9897558},
{"P5",40.7376209,-73.9897078},
{"P6",40.7378063,-73.9901465},
{"P7",40.7374023,-73.9891909},
{"P8",40.7376397,-73.9897525},
{"P9",40.7376199,-73.9897055},
{"P10",40.7377881,-73.9901034},
{"P11",40.7368005,-73.9896606},
{"P12",40.7384575,-73.9880639},
{"P13",40.7392873,-73.9954468},
{"P14",40.7386615,-73.9885562},
{"P15",40.7374599,-73.9893272},
{"P1",40.7382796,-73.9912964},
{"P2",40.7375996,-73.9902017},
{"P3",40.7370285,-73.9886015},
{"P4",40.7376411,-73.9897558},
{"P5",40.7376209,-73.9897078},
{"P6",40.737691,-73.9898737},
{"P7",40.7375247,-73.9894803},
{"P8",40.7376397,-73.9897525},
{"P9",40.7376397,-73.9897525},
{"P10",40.7376398,-73.9897527},
{"P11",40.7365405,-73.9889492},
{"P12",40.7383702,-73.9878489},
{"P13",40.7398526,-73.9950216},
{"P14",40.7384617,-73.9880741},
{"P15",40.7372163,-73.9887385},
{"P1",40.7378722,-73.9903066},
{"P2",40.7379043,-73.9903845},
{"P3",40.7374999,-73.9894218},
{"P4",40.7375674,-73.9902093},
{"P5",40.7376209,-73.9897078},
{"P6",40.7376199,-73.9897055},
{"P7",40.7376397,-73.9897525},
{"P8",40.7376397,-73.9897525},
{"P9",40.7376397,-73.9897525},
{"P10",40.7376398,-73.9897527},
{"P11",40.7360496,-73.9878077},
{"P12",40.7382982,-73.9876735},
{"P13",40.7401805,-73.9957944},
{"P14",40.7383421,-73.9877797},
{"P15",40.7370284,-73.9882878},
{"P1",40.737725,-73.9899541},
{"P2",40.737708,-73.9899141},
{"P3",40.7374999,-73.9894218},
{"P4",40.7376751,-73.9898362},
{"P5",40.7376209,-73.9897078},
{"P6",40.7376199,-73.9897055},
{"P7",40.7376397,-73.9897525},
{"P8",40.7376397,-73.9897525},
{"P9",40.7376397,-73.9897525},
{"P10",40.7376398,-73.9897527},
{"P11",40.7360496,-73.9878077},
{"P12",40.7382372,-73.9875325},
{"P13",40.7404806,-73.9965032},
{"P14",40.738167,-73.9879079},
{"P15",40.7368398,-73.9878414},
{"P1",40.737725,-73.9899541},
{"P2",40.737708,-73.9899141},
{"P3",40.7374999,-73.9894218},
{"P4",40.7376751,-73.9898362},
{"P5",40.7376209,-73.9897078},
{"P6",40.7376199,-73.9897055},
{"P7",40.7376397,-73.9897525},
{"P8",40.7376397,-73.9897525},
{"P9",40.7376397,-73.9897525},
{"P10",40.7376398,-73.9897527},
{"P11",40.7360496,-73.9878077},
{"P12",40.7382372,-73.9875325},
{"P13",40.7404806,-73.9965032},
{"P14",40.7381787,-73.9878993},
{"P15",40.7366001,-73.9872741},
{"P1",40.737725,-73.9899541},
{"P2",40.737708,-73.9899141},
{"P3",40.7374999,-73.9894218},
{"P4",40.7376751,-73.9898362},
{"P5",40.7376209,-73.9897078},
{"P6",40.7376199,-73.9897055},
{"P7",40.7376397,-73.9897525},
{"P8",40.7376397,-73.9897525},
{"P9",40.7376397,-73.9897525},
{"P10",40.7376398,-73.9897527},
{"P11",40.7360496,-73.9878077},
{"P12",40.7382372,-73.9875325},
{"P13",40.7404806,-73.9965032},
{"P14",40.7381787,-73.9878993},
{"P15",40.7366057,-73.9872873},
{"P1",40.737725,-73.9899541},
{"P2",40.737708,-73.9899141},
{"P3",40.7374999,-73.9894218},
{"P4",40.7376751,-73.9898362},
{"P5",40.7376209,-73.9897078},
{"P6",40.7376199,-73.9897055},
{"P7",40.7376397,-73.9897525},
{"P8",40.7376397,-73.9897525},
{"P9",40.7376397,-73.9897525},
{"P10",40.7376398,-73.9897527},
{"P11",40.7360496,-73.9878077},
{"P12",40.7382372,-73.9875325},
{"P13",40.7404806,-73.9965032},
{"P14",40.7381787,-73.9878993},
{"P15",40.7361979,-73.9910125},
{"P1",40.737725,-73.9899541},
{"P2",40.737708,-73.9899141},
{"P3",40.7374999,-73.9894218},
{"P4",40.7376751,-73.9898362},
{"P5",40.7376209,-73.9897078},
{"P6",40.7376199,-73.9897055},
{"P7",40.7376397,-73.9897525},
{"P8",40.7376397,-73.9897525},
{"P9",40.7376397,-73.9897525},
{"P10",40.7376398,-73.9897527},
{"P11",40.7360496,-73.9878077},
{"P12",40.7382372,-73.9875325},
{"P13",40.7404806,-73.9965032},
{"P14",40.7381787,-73.9878993},
{"P15",40.7361979,-73.9910125},
{"P1",40.737725,-73.9899541},
{"P2",40.737708,-73.9899141},
{"P3",40.7374999,-73.9894218},
{"P4",40.7376751,-73.9898362},
{"P5",40.7376209,-73.9897078},
{"P6",40.7376199,-73.9897055},
{"P7",40.7376397,-73.9897525},
{"P8",40.7376209,-73.9897078},
{"P9",40.7376209,-73.9897078},
{"P10",40.7376398,-73.9897527},
{"P11",40.7360496,-73.9878077},
{"P12",40.7382372,-73.9875325},
{"P13",40.7404806,-73.9965032},
{"P14",40.7381787,-73.9878993},
{"P15",40.7361979,-73.9910125}}
	
	

	// do eval

	brokerInput := context.GetInput(broker)

	ivbroker, ok := brokerInput.(string)
	if !ok {
		context.SetOutput("result", "BROKER_NOT_SET")
		return true, fmt.Errorf("broker not set")
	}

	topicInput := context.GetInput(topic)

	ivtopic, ok := topicInput.(string)
	if !ok {
		context.SetOutput("result", "TOPIC_NOT_SET")
		return true, fmt.Errorf("topic not set")
	}

	//payloadInput := context.GetInput(payload)

	//ivpayload, ok := payloadInput.(string)

	var buffer bytes.Buffer


	if !ok {
		context.SetOutput("result", "PAYLOAD_NOT_SET")
		return true, fmt.Errorf("payload not set")
	}

	ivqos, ok := context.GetInput(qos).(int)

	if !ok {
		context.SetOutput("result", "QOS_NOT_SET")
		return true, fmt.Errorf("qos not set")
	}

	idInput := context.GetInput(id)

	ivID, ok := idInput.(string)
	if !ok {
		context.SetOutput("result", "CLIENTID_NOT_SET")
		return true, fmt.Errorf("client id not set")
	}

	userInput := context.GetInput(user)

	ivUser, ok := userInput.(string)
	if !ok {
		//User not set, use default
		ivUser = ""
	}

	passwordInput := context.GetInput(password)

	ivPassword, ok := passwordInput.(string)
	if !ok {
		//Password not set, use default
		ivPassword = ""
	}

	opts := mqtt.NewClientOptions()
	opts.AddBroker(ivbroker)
	opts.SetClientID(ivID)
	opts.SetUsername(ivUser)
	opts.SetPassword(ivPassword)
	client := mqtt.NewClient(opts)

	log.Debugf("MQTT Publisher connecting")
	if token := client.Connect(); token.Wait() && token.Error() != nil {
		panic(token.Error())
	}

	for _, p := range persons {
		buffer.WriteString(p.PID)
		buffer.WriteString(",")
		buffer.WriteString(strconv.FormatFloat(p.Lat, 'f', 8, 64))
		buffer.WriteString(",")
		buffer.WriteString(strconv.FormatFloat(p.Long, 'f', 8, 64))
		
		//fmt.Println(p.PID, ",", p.Lat, ",", p.Long)
		//time.Sleep(time.Millisecond * 1000)
		//fmt.Println("  ", &persons)
		//fmt.Println(buffer.String())

		log.Debugf("MQTT Publisher connected, sending message")
		token := client.Publish(ivtopic, byte(ivqos), false, buffer)

		time.Sleep(time.Millisecond * 1000)
	}


		token.Wait()

	client.Disconnect(250)
	log.Debugf("MQTT Publisher disconnected")
	context.SetOutput("result", "OK")

	return true, nil
}
